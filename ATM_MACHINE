package codsoft;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class BankAccount {
    private double balance;

    public BankAccount(double initialBalance) {
        balance = initialBalance;
    }

    public double getBalance() {
        return balance;
    }

    public boolean deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            return true;
        }
        return false;
    }

    public boolean withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            return true;
        }
        return false;
    }
}

class ATM {
    private BankAccount userAccount;

    public ATM(BankAccount account) {
        userAccount = account;
    }

    public void displayMainMenu() {
        Scanner scanner = new Scanner(System.in);
        int choice;

        while (true) {
            System.out.println("\nMain Menu:");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Check Balance");
            System.out.println("4. Logout");
            System.out.print("Select an option: ");

            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter deposit amount: ");
                    double depositAmount = scanner.nextDouble();
                    if (userAccount.deposit(depositAmount)) {
                        System.out.println("Deposit successful.");
                    } else {
                        System.out.println("Invalid deposit amount.");
                    }
                    break;

                case 2:
                    System.out.print("Enter withdrawal amount: ");
                    double withdrawalAmount = scanner.nextDouble();
                    if (userAccount.withdraw(withdrawalAmount)) {
                        System.out.println("Withdrawal successful.");
                    } else {
                        System.out.println("Invalid withdrawal amount or insufficient balance.");
                    }
                    break;

                case 3:
                    System.out.println("Current balance: " + userAccount.getBalance());
                    break;

                case 4:
                    System.out.println("Logging out. Thank you!");
                    return;

                default:
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }
    }
}

class User {
    private String username;
    private String password;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    public boolean authenticate(String enteredUsername, String enteredPassword) {
        return username.equals(enteredUsername) && password.equals(enteredPassword);
    }
}

class LoginSystem {
    private Map<String, User> users;

    public LoginSystem() {
        users = new HashMap<>();
       
        users.put("user1", new User("user1", "shikha"));
        users.put("user2", new User("user2", "kirti"));
    }

    public User login() {
        Scanner scanner = new Scanner(System.in);
        String username, password;
        System.out.print("Enter username: ");
        username = scanner.nextLine();
        System.out.print("Enter password: ");
        password = scanner.nextLine();

        if (users.containsKey(username)) {
            User user = users.get(username);
            if (user.authenticate(username, password)) {
                System.out.println("Login successful.");
                return user;
            }
        }
        System.out.println("Invalid username or password. Login failed.");
        return null;
    }
}

public class Atm_Machine {
    public static void main(String[] args) {
        LoginSystem loginSystem = new LoginSystem();
        User currentUser = null;

        while (currentUser == null) {
            currentUser = loginSystem.login();
        }

        System.out.println("Welcome, " + currentUser);
        BankAccount bankAccount = new BankAccount(1000); 
        ATM atm = new ATM(bankAccount);
        atm.displayMainMenu();
    }
}
